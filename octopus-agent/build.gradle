apply plugin: 'distribution'

tasks.named('jar') {
  archiveBaseName = 'octopus-teamcity-agent'
  manifest {
    attributes(
      'Specification-Title': archiveBaseName,
      'Specification-Version': project.version,
      'Implementation-Title': archiveBaseName,
      'Implementation-Version': project.version
      )
  }
}

dependencies {
  provided files('./libs/agent.jar')
  provided 'org.jetbrains.teamcity:agent-api'

  implementation project(':octopus-common')
  implementation 'org.jetbrains.teamcity:teamcity-rest-client'
  implementation 'com.google.code.gson:gson'
  implementation 'com.google.guava:guava'
  implementation 'com.octopus:octopus-sdk'
  implementation 'org.apache.logging.log4j:log4j-api'
  implementation 'org.apache.logging.log4j:log4j-core'
  implementation 'commons-io:commons-io'

  testImplementation 'org.jetbrains.teamcity:agent-api'
  testImplementation 'org.junit.jupiter:junit-jupiter-api'
  testImplementation 'org.junit.jupiter:junit-jupiter-params'
  testImplementation 'org.assertj:assertj-core'
  testImplementation 'org.mockito:mockito-core'
  testImplementation 'org.mockito:mockito-junit-jupiter'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testRuntimeOnly 'org.jetbrains.teamcity:agent-api'

  //testImplementation group: 'com.octopus', name:'dsl', classifier: 'test-support'
}

distZip {
  archiveFileName = "Octopus.TeamCity.zip"
}

distributions {
  main {
    contents {
      into '/'
      into('/lib/') {
        from configurations.runtimeClasspath
        from jar
      }
      from file("teamcity-plugin.xml")

      // teamcity-rest-client pulls in slf4j-api which then conflicts with the literal TeamCity agent's class
      // loader - only solution seems to be to explicitly exclude this file (ideally here, rather than in
      // the API wrapper)
      exclude("**/slf4j-api*")
    }
  }
}
