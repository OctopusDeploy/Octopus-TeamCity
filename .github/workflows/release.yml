name: Build, Test, Package and Push

on:
  release:
    types: [created]

  workflow_dispatch:
    inputs:
      release-url:
        description: "The URL of the github release which is being replicated in Octopus Deploy"
        required: true

jobs:
  build:
    name: "Build and Package"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Build with gradle
        run: ./gradlew build test

      - name: Create Plugin Zip Deployment
        id: create-package
        run: |
          ./gradlew distZip
          PACKAGE_NAME=`./gradlew -q packageName`
          echo "::set-output name=package-created::$PACKAGE_NAME"
          VERSION=`./gradlew properties | grep ^version | awk '{print $2;}'`
          echo "::set-output name=version::$VERSION"

      - name: Push a package to Octopus Deploy üêô
        uses: OctopusDeploy/push-package-action@v1.0.2
        with:
          overwrite_mode: IgnoreExists
          api_key: ${{ secrets.OCTOPUS_APIKEY }}
          packages: ${{ step.create-package.package-created }}
          server: ${{ secrets.OCTOPUS_SERVER }}

      - name: Fetch Release Notes
        id: fetch-release-nodes
        run: |
          if ["${{github.event_name}}" = "release"]; then
             RELEASE_NOTES=curl ${{ github.event_path }} | jq '.body'
             echo "::set-output name=release-notes::RELEASE_NOTES"
          else
             RELEASE_NOTES=curl ${{ inputs.release-url }} | jq '.body'
             echo "::set-output name=release-notes::RELEASE_NOTES"
          fi

      - name: Create a release in Octopus Deploy üêô
        uses: OctopusDeploy/create-release-action@v1.0.2
        with:
          api_key: ${{ secrets.OCTOPUS_APIKEY }}
          server: ${{ secrets.OCTOPUS_SERVER }}
          space: "Integrations"
          project: "TeamCity Plugin"
          package_version: ${{ steps.create-package.version }}
          release_notes: ${{steps.fetch-release-notes.release-notes }}
