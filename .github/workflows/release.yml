name: Push to Octopus Server

on:
  release:
    types: [created]

  workflow_dispatch:
    inputs:
      release-tag:
        description: "The tag of the release being replicated in Octopus Deploy"
        required: true

jobs:
  build:
    name: "Push Package and Create Release"
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Release Notes
        id: fetch-release-notes
        run: |
          echo "::debug::${{github.event_name}}"
          if [[ "${{github.event_name}}" = "release" ]]; then
             LOCAL_RELEASE_NOTES=`jq --raw-output '.release.body' ${{ github.event_path }}`
          else
             RELEASE_URL=$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases/tags/${{github.event.inputs.release-tag}}
             echo "::debug::Fetching relesae from $RELEASE_URL"
             LOCAL_RELEASE_NOTES=`curl -s -H "Accept: application/vnd.github.v3+json" $RELEASE_URL | jq --raw-output '.body'`
          fi
          echo "$LOCAL_RELEASE_NOTES"
          MULTI_LINE_LOCAL_RELEASE_NOTES=$(cat << EOF
          $LOCAL_RELEASE_NOTES
          EOF
          )
          # Need to use env-var, not step outputs, to ensure multi-line is successful
          echo "RELEASE_NOTES=<<EOF" >> $GITHUB_ENV
          echo "$MULTI_LINE_LOCAL_RELEASE_NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create a release in Octopus Deploy üêô
        run:
          echo ${{ env.RELEASE_NOTES }}
